{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/form/index.js","webpack:///./src/validators/validator-required.js","webpack:///./src/validators/validator-between.js","webpack:///./src/validators/validator-pattern.js","webpack:///./src/validators/validator-min-integer.js","webpack:///./src/validators/validator-max-integer.js","webpack:///./src/validators/validator-min-length.js","webpack:///./src/validators/validator-max-length.js","webpack:///./src/helpers/date-helpers.js","webpack:///./src/validators/validator-date-before.js","webpack:///./src/validators/validator-date-after.js","webpack:///./src/validators/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Form","formData","_this","this","inputName","_classCallCheck","_defineProperty","undefined","validators","Error","valid","keys","errors","length","fieldName","checkFieldExists","touched","errorName","indexOf","savedValue","values","Array","isArray","includes","component","validateField","forceUpdate","inputData","multiple","newFormValidators","filter","v","push","forceUpdateFn","_this2","forEach","isValid","errorsArray","updateFormStatus","ValidatorRequired","validator_required_classCallCheck","ValidatorBetween","min","max","validator_between_classCallCheck","ValidatorPattern","regexPattern","validator_pattern_classCallCheck","regex","RegExp","test","ValidatorMinInteger","validator_min_integer_classCallCheck","ValidatorMaxInteger","validator_max_integer_classCallCheck","ValidatorMinLength","validator_min_length_classCallCheck","ValidatorMaxLength","validator_max_length_classCallCheck","toSimpleDate","date","arguments","Date","getFullYear","getMonth","getDate","isValidDate","dateStr","isNaN","parse","getToday","validator_date_before_ValidatorDateBefore","ValidatorDateBefore","validator_date_before_classCallCheck","validator_date_after_ValidatorDateAfter","ValidatorDateAfter","validator_date_after_classCallCheck","Validators","number","pattern","__webpack_exports__","form","event","target","fieldType","tagName","type","from","selectedOptions","map","opt","newValue","saveField"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Form {\n\n  constructor(formData) {\n    this.valid = false; // Is the form valid ?\n    this.validators = {}; // Validators by field\n    this.values = {} // Form values\n    this.errors = {} // Errors\n    this.touched = {} // Touched fields (all false by default)\n\n\n    for(let inputName in formData) {\n      let inputData = formData[inputName];\n\n      // Values\n      if(inputData['value']) this.values[inputName] = inputData['value'];\n      else this.values[inputName] = inputData.multiple ? [] : null;\n\n      // Validators\n      this.validators[inputName] = inputData.validators || [];\n\n      // Touched\n      this.touched[inputName] = false;\n\n      // Init the current field value\n      this.validateField(inputName, this.values[inputName] || '');\n    }\n\n    return this;\n  }\n\n  updateValidators(newFormValidators) {\n    for(let inputName in newFormValidators) {\n      this.checkFieldExists(inputName);\n\n      let inputData = newFormValidators[inputName];\n      this.validators[inputName] = inputData.validators || [];\n      this.validateField(inputName, this.values[inputName] || '');\n    }\n  }\n\n  saveField(name, value) {\n    this.touched[name] = true;\n\n    if(Array.isArray(this.values[name])) {\n      if(Array.isArray(value)) {\n        // Case 'select.multiple' => we got an array\n        this.values[name] = value;\n      } else {\n        // Checkboxes : we add/remove value one by one\n        if(this.values[name].includes(value)) this.values[name] = this.values[name].filter(v => v !== value)\n        else this.values[name].push(value);\n      }\n    }\n    else if(Array.isArray(value)) {\n      // Array values on a non-multiple field => error\n      throw new Error('Can\\'t set an array value to a non-mulitple field. Please add `multiple:true` for \\'' + name + '\\' when calling Form constructor');\n    } else {\n      this.values[name] = value === '' ? null : value;\n    }\n\n    // Return the new value\n    return this.values[name];\n  }\n\n  validateField(name, value, forceUpdateFn) {\n    // Extract validators\n    let validators = this.validators[name];\n    if(!validators) throw new Error('No entry  \\'' + name + '\\' in the given form description.')\n\n    // Remove the current errors\n    delete this.errors[name];\n\n    validators.forEach(v => {\n      if(!v.isValid(value)) {\n        let errorsArray = this.errors[name] || [];\n        errorsArray.push(v.errorName)\n        this.errors[name] = errorsArray;\n      }\n    });\n\n    this.updateFormStatus();\n\n    // Call forceUpdate()\n    if(forceUpdateFn) forceUpdateFn();\n  }\n\n  checkFieldExists = (key) => {\n    if(this.validators[key] === undefined) throw new Error('Unknown field: \\'' + key + '\\'');\n    return true;\n  }\n\n  updateFormStatus = () => {\n    this.valid = Object.keys(this.errors).length === 0;\n  }\n\n  /* Return true if the given field has at least one error */\n  hasErrors = (fieldName) => { this.checkFieldExists(fieldName); return this.errors[fieldName] !== undefined; }\n\n  /* Return all the errors associated to the given field */\n  getErrors = (fieldName) => { this.checkFieldExists(fieldName); return this.errors[fieldName] || []; }\n\n  /* Return if a field has been modified by an user */\n  isTouched = (fieldName) => { this.checkFieldExists(fieldName); return this.touched[fieldName]; }\n\n  /* Return true if the given field has the given error */\n  hasError = (fieldName, errorName) => {\n    this.checkFieldExists(fieldName);\n    if(!this.errors[fieldName]) return false;\n    return this.errors[fieldName].indexOf(errorName) !== -1;\n  }\n\n  isSelected = (fieldName, value) => {\n    this.checkFieldExists(fieldName);\n    let savedValue = this.values[fieldName];\n    return Array.isArray(savedValue) ? savedValue.includes(value) : savedValue === value;\n  }\n\n  getValue = (fieldName) => {\n    this.checkFieldExists(fieldName);\n    return this.values[fieldName];\n  }\n\n  setValue = (fieldName, value, component) => {\n    this.checkFieldExists(fieldName);\n    this.values[fieldName] = value;\n    this.validateField(fieldName, value, component ? () => component.forceUpdate() : undefined);\n  }\n\n  getValues = () => this.values;\n  isValid = () => this.valid;\n}\n","export default class ValidatorRequired {\n  constructor() {\n    this.errorName = 'required';\n  }\n\n  isValid(value) {\n    if(typeof value === 'number') return value !== '';\n\n    if(Array.isArray(value) && value) return value.length > 0;\n    return value ? true : false;\n  }\n}\n","export default class ValidatorBetween {\n  constructor(min, max) {\n    this.errorName = 'between';\n\n    this.min = min;\n    this.max = max;\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    return this.min <= value && value <= this.max;\n  }\n}\n","export default class ValidatorPattern {\n  constructor(name, regexPattern) {\n    this.errorName = name;\n    this.regex = new RegExp(regexPattern);\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    return this.regex.test(value);\n  }\n}","export default class ValidatorMinInteger {\n  constructor(min) {\n    this.errorName = 'minInteger';\n    this.min = min;\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    return this.min <= value;\n  }\n}\n","export default class ValidatorMaxInteger {\n  constructor(max) {\n    this.errorName = 'maxInteger';\n\n    this.max = max;\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    return value <= this.max;\n  }\n}\n","export default class ValidatorMinLength {\n  constructor(length) {\n    this.errorName = 'minLength';\n    this.length = length;\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    if(Array.isArray(value)) return value.length >= this.length;\n    return value.length >= this.length;\n  }\n}\n","export default class ValidatorMaxLength {\n  constructor(length) {\n    this.errorName = 'maxLength';\n    this.length = length;\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    if(Array.isArray(value)) return value.length <= this.length ;\n\n    return value.length <= this.length;\n  }\n}\n","export const toSimpleDate = (date = new Date()) => {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Convert to yyyy-MM-dd\n}\n\nexport const isValidDate = (dateStr) => !isNaN(Date.parse(dateStr));\n\nexport const getToday = () => toSimpleDate()","import { isValidDate, toSimpleDate } from '../helpers/date-helpers';\n\nexport default class ValidatorDateBefore {\n\n  constructor(name, date) {\n    this.errorName = name;\n\n    if(!isValidDate(date)) throw new Error(date + ' is an invalid date. Make sure to respect the \\'yyyy-MM-dd\\' format');\n\n    this.date = date instanceof Date ? date : toSimpleDate(new Date(date));\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    let date = new Date(value);\n    return toSimpleDate(date) < this.date;\n  }\n}\n","import { isValidDate, toSimpleDate } from '../helpers/date-helpers';\n\nexport default class ValidatorDateAfter {\n\n  constructor(name, date) {\n    this.errorName = name;\n\n    if(!isValidDate(date)) throw new Error(date + ' is an invalid date. Make sure to respect the \\'yyyy-MM-dd\\' format');\n\n    this.date = date instanceof Date ? date : toSimpleDate(new Date(date));\n  }\n\n  isValid(value) {\n    // No data : validation disable\n    if(!value) return true;\n\n    let date = new Date(value);\n    return toSimpleDate(date) > this.date;\n  }\n}\n","import ValidatorRequired from \"./validator-required\";\nimport ValidatorBetween from \"./validator-between\";\nimport ValidatorPattern from \"./validator-pattern\";\nimport ValidatorMinInteger from \"./validator-min-integer\";\nimport ValidatorMaxInteger from \"./validator-max-integer\";\nimport ValidatorMinLength from \"./validator-min-length\";\nimport ValidatorMaxLength from \"./validator-max-length\";\nimport ValidatorDateBefore from \"./validator-date-before\";\nimport ValidatorDateAfter from \"./validator-date-after\";\n\nimport { toSimpleDate, getToday, getTomorrow } from '../helpers/date-helpers'\n\nexport default class Validators {\n  static minInteger = (number) => new ValidatorMinInteger(number);\n  static maxInteger = (number) => new ValidatorMaxInteger(number);\n  static between = (min, max) => new ValidatorBetween(min, max);\n\n  static minLength = (length) => new ValidatorMinLength(length);\n  static maxLength = (length) => new ValidatorMaxLength(length);\n\n  static required = () => new ValidatorRequired();\n\n  static pattern = (pattern) => new ValidatorPattern('pattern', pattern);\n  static email = () => new ValidatorPattern('email', /^([a-zA-Z0-9_\\.-]+)@([\\da-zA-Z0-9\\.-]+)\\.([a-z\\.]{2,6})$/);\n  static url = () => new ValidatorPattern('url', /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/);\n  static alpha = () => new ValidatorPattern('alpha', /^[a-zA-Z]*$/);\n  static alphaDash = () => new ValidatorPattern('alphaDash', /^[a-zA-Z_]*$/);\n  static numeric = () => new ValidatorPattern('numeric', /^[0-9]*$/);\n\n  static dateBefore = (date) => new ValidatorDateBefore('dateBefore', date);\n  static dateAfter = (date) => new ValidatorDateAfter('dateAfter', date);\n  static dateBeforeToday = () => new ValidatorDateBefore('dateBeforeToday', getToday());\n  static dateAfterToday = () => new ValidatorDateAfter('dateAfterToday', getToday());\n}","export const validateField = (component, form, fieldName) => {\n  return function(event) {\n    // Name\n    fieldName = fieldName || event.target.name;\n    form.checkFieldExists(fieldName);\n\n    // Type\n    let fieldType = event.target.tagName === 'SELECT' ? event.target.multiple ? 'select.multiple' : 'select' : undefined;\n    if(!fieldType) fieldType = event.target.type || 'text';\n\n    // Value\n    let value = event.target.value;\n    if((fieldType === 'number' || fieldType === 'range' ) && value !== '' && +value !== 'NaN') value = +value; // Convert as an integer if needed\n    else if (fieldType === 'select.multiple') value = Array.from(event.target.selectedOptions).map(opt => opt.value); // As array if multiple values\n\n    let newValue = form.saveField(fieldName, value);\n    // Check and forceUpdate\n    form.validateField(fieldName, newValue, () => component.forceUpdate())\n  };\n}\n\nexport { default as Form } from './form';\nexport { default as Validators } from './validators';"],"sourceRoot":""}